
standalone uwsgi
    uwsgi -H env --master --http :9090 --enable-threads -w main --callable app
    or
    uwsgi --yaml standalone-uwsgi.yaml

nginx uwsgi
    uwsgi -H env --master --socket 127.0.0.1:3031 --enable-threads -w main --callable app
    or
    uwsgi --yaml nginx-uwsgi.yaml
    
 nginx
            location / {
                include uwsgi_params;
                uwsgi_pass 127.0.0.1:3031;
            }


run nginx
    /usr/local/sbin/nginx
    /usr/local/sbin/nginx -s quit


        location /js {
            root    /Users/t_sasaki/Study/Python/webapp2;
        }
        location / {
            include uwsgi_params;
            uwsgi_pass 127.0.0.1:3031;
        }

スタンドアロンwsgiでは、staticfilesを返すのがうまく行かなかった。HTTPヘッダが混ざる？？
websocketをPythonで実装するのが面倒になってやめたgevent-websocketがうまく動作しなかった。
1どの送受信はうまく行くが、２度目以降の送信が到達しない
-->イベントループする必要があった
webapp2 + gevent-websocketの実装ができた


動作シーケンス
    ClientA                                           ClientB
    ----------------------------------------------------------
    enter Room1

    getUserMedia
        onGUMSuccess
            send:move
                initiator = false

                                            .....
                                                     enterRoom1
                                                         getUserMedia
                                                             onGUMSuccess
                                                                 send:move
                                                                     initiator = true
                                                                     maybeStart
                                                                         createPeerConnection
                                                                             onSignalingMessage
                                                                                 send:sdp
                                                                         peerCon.addStream
                                             .....
    send:check
        receiveSDP
            maybeStart
                createPeerConnection
                    onSignalingMessage
                        send:sdp
                                                     send:check
                                                        receiveSDP
                                                            processSignalingMessage
                                                     
                                             .....

                peerCon.addStream

                                                    pc.onaddstream
                                                    video_remote.src = createObjectURL(event.steram)

                                            .....
            peerCon.processSignalingMessage
